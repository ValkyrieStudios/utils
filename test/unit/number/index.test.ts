/* eslint-disable max-statements */
import {describe, it, expect} from 'vitest';
import * as LibNum from '../../../lib/number';
import is from '../../../lib/number/is';
import isAbove from '../../../lib/number/isAbove';
import isAboveOrEqual from '../../../lib/number/isAboveOrEqual';
import isBelow from '../../../lib/number/isBelow';
import isBelowOrEqual from '../../../lib/number/isBelowOrEqual';
import isBetween from '../../../lib/number/isBetween';
import isInt from '../../../lib/number/isInteger';
import isIntAbove from '../../../lib/number/isIntegerAbove';
import isIntAboveOrEqual from '../../../lib/number/isIntegerAboveOrEqual';
import isIntBelow from '../../../lib/number/isIntegerBelow';
import isIntBelowOrEqual from '../../../lib/number/isIntegerBelowOrEqual';
import isIntBetween from '../../../lib/number/isIntegerBetween';
import isNumericalNaN from '../../../lib/number/isNumericalNaN';
import randomBetween from '../../../lib/number/randomBetween';
import randomIntBetween from '../../../lib/number/randomIntBetween';
import round from '../../../lib/number/round';
import toPercentage from '../../../lib/number/toPercentage';

describe('Number- *', () => {
    it('Should be a correct export', () => {
        expect(LibNum.isGt).toEqual(isAbove);
        expect(LibNum.isGte).toEqual(isAboveOrEqual);
        expect(LibNum.isLt).toEqual(isBelow);
        expect(LibNum.isLte).toEqual(isBelowOrEqual);
        expect(LibNum.isBetween).toEqual(isBetween);
        expect(LibNum.isInt).toEqual(isInt);
        expect(LibNum.isIntBetween).toEqual(isIntBetween);
        expect(LibNum.isIntGt).toEqual(isIntAbove);
        expect(LibNum.isIntGte).toEqual(isIntAboveOrEqual);
        expect(LibNum.isIntLt).toEqual(isIntBelow);
        expect(LibNum.isIntLte).toEqual(isIntBelowOrEqual);
        expect(LibNum.isInteger).toEqual(isInt);
        expect(LibNum.isIntegerBetween).toEqual(isIntBetween);
        expect(LibNum.isIntegerAbove).toEqual(isIntAbove);
        expect(LibNum.isIntegerAboveOrEqual).toEqual(isIntAboveOrEqual);
        expect(LibNum.isIntegerBelow).toEqual(isIntBelow);
        expect(LibNum.isIntegerBelowOrEqual).toEqual(isIntBelowOrEqual);
        expect(LibNum.isNum).toEqual(is);
        expect(LibNum.isNumBetween).toEqual(isBetween);
        expect(LibNum.isNumGt).toEqual(isAbove);
        expect(LibNum.isNumGte).toEqual(isAboveOrEqual);
        expect(LibNum.isNumLt).toEqual(isBelow);
        expect(LibNum.isNumLte).toEqual(isBelowOrEqual);
        expect(LibNum.isNumber).toEqual(is);
        expect(LibNum.isNumberBetween).toEqual(isBetween);
        expect(LibNum.isNumberAbove).toEqual(isAbove);
        expect(LibNum.isNumberAboveOrEqual).toEqual(isAboveOrEqual);
        expect(LibNum.isNumberBelow).toEqual(isBelow);
        expect(LibNum.isNumberBelowOrEqual).toEqual(isBelowOrEqual);
        expect(LibNum.isNumericalNaN).toEqual(isNumericalNaN);
        expect(LibNum.randomBetween).toEqual(randomBetween);
        expect(LibNum.randBetween).toEqual(randomBetween);
        expect(LibNum.randomIntBetween).toEqual(randomIntBetween);
        expect(LibNum.randIntBetween).toEqual(randomIntBetween);
        expect(LibNum.round).toEqual(round);
        expect(LibNum.toPercentage).toEqual(toPercentage);
        expect(LibNum.toPct).toEqual(toPercentage);
    });
});
