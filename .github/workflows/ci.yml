name: CI
on:
  push:
    branches: [main]
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches: [main]
permissions:
  contents: read
jobs:
  audit:
    name: Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Run Audit
        run: npm audit --omit=dev --audit-level=moderate
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [audit]
    strategy:
      fail-fast: false
      matrix:
        node: [20, 22]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
      - run: npm ci
      - run: npm run lint
  types:
    name: Types
    runs-on: ubuntu-latest
    needs: [audit]
    strategy:
      fail-fast: false
      matrix:
        node: [20, 22]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
      - run: npm ci
      - run: npm run types
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [audit]
    strategy:
      fail-fast: false
      matrix:
        node: [20, 22]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
      - uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: "Europe/Brussels"
      - run: npm ci
      - run: npm run test
  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: [lint, types, test]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'npm'
      - uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: "Europe/Brussels"
      - run: npm ci
      - run: npm run test:coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          directory: ./coverage/
          fail_ci_if_error: true
          files: ./lcov.info,./lcov-report
          flags: unittests
          name: codecov-umbrella
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: [coverage]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org/'
      - name: Install Dependencies
        run: npm ci
      - name: Prepare distribution
        run: |
          rm -rf ./dist
          mkdir ./dist
          npx tsc -p ./tsconfig.build.json
          npx tsc -p ./tsconfig.types.json
          npx tsc -p ./tsconfig.types_all.json
          cp package.json README.md LICENSE.md .npmignore ./dist
      - name: Publish to npm
        run: |
          cd ./dist
          npm publish --access public --verbose
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
